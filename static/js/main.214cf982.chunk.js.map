{"version":3,"sources":["reducers/fetch_weather.js","reducers/index.js","actions/index.js","components/searchBar.js","components/chart.js","components/googlemap.js","components/content.js","components/app.js","index.js"],"names":["WeatherReducer","state","action","type","payload","combineReducers","weather","fetchdata","city","dispatch","a","axios","get","response","data","console","log","SearchBar","term","onFormSubmit","e","preventDefault","props","setState","className","style","marginBottom","onSubmit","this","value","onChange","target","marginTop","React","Component","connect","Chart","average","_","round","sum","element","length","margin","color","fontSize","fontWeight","unit","GoogleMap","google","zoom","initialCenter","lat","lng","lon","height","width","position","containerStyle","title","id","draggable","GoogleApiWrapper","apiKey","Content","renderweather","temp","list","map","item","main","pres","pressure","hum","humidity","coord","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Reducers","applyMiddleware","Thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.214cf982.chunk.js","sourcesContent":["\r\n\r\nconst WeatherReducer=(state=[], action)=>{\r\n    switch (action.type) {\r\n        case \"FETCH-DATA\":\r\n           return [action.payload, ...state]\r\n           \r\n    \r\n        default:\r\n           return state\r\n    }\r\n};\r\nexport default WeatherReducer","\r\nimport {combineReducers} from 'redux';\r\nimport WeatherReducer from './fetch_weather';\r\n\r\nexport default combineReducers({\r\n   weather:WeatherReducer\r\n});","\r\nimport axios from 'axios';\r\n\r\nconst KEY =\"337f9e15f531b8e09518f9dcffe668c2\";\r\n\r\nexport const fetchdata=(city)=>async dispatch=>{\r\n     const response = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${KEY}`)\r\n    dispatch({\r\n        type:'FETCH-DATA',\r\n        payload:response.data\r\n    });\r\n    console.log(response)\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchdata} from '../actions'\r\n\r\nclass SearchBar extends React.Component{\r\n    state={term:''}\r\n\r\n    onFormSubmit=(e)=>{\r\n        e.preventDefault();\r\n       this.props.fetchdata(this.state.term);\r\n       this.setState({term:''})\r\n    }\r\n   \r\n    render(){\r\n        return(\r\n            <div className=\"ui segment\"  style={{marginBottom:\"15px\"}}>\r\n\r\n\r\n\r\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                    <label className=\"ui header\">Enter A City Name</label>\r\n                   <div className=\"ui grid row\">\r\n                     \r\n                            <div className=\"field ten wide column\">\r\n                                  \r\n                            <input type=\"text\" value={this.state.term} onChange={(e)=> this.setState({term:e.target.value})}/>\r\n                        </div>\r\n                        <span className=\"two wide coulmn\" style={{marginTop:\"15px\"}}>\r\n                            <button type=\"submit\" className=\"ui submit button\">Submit</button>\r\n                        </span>\r\n                   </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(null,{fetchdata} )(SearchBar)","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { Sparklines, SparklinesLine, SparklinesReferenceLine} from 'react-sparklines'; \r\n\r\nconst Chart =(props)=>{\r\n    let average = _.round(_.sum(props.element)/props.element.length)\r\n    return(\r\n         <td>{<Sparklines data={props.element} margin={5}>\r\n               <SparklinesLine color={props.color} />\r\n               <SparklinesReferenceLine type=\"avg\"/>\r\n            </Sparklines>}\r\n    <div className='center aligned' style={{fontSize:'20px', fontWeight:'bold', marginTop:\"5px\"}}>{average} {props.unit}</div>\r\n       </td>\r\n    )\r\n}\r\nexport default Chart","import React from 'react';\r\nimport {Map,  GoogleApiWrapper, Marker} from 'google-maps-react';\r\n\r\n\r\n\r\nclass GoogleMap extends React.Component{\r\n  \r\n    // componentDidMount() {\r\n        \r\n      \r\n  \r\n    //  new google.maps.Map(document.getElementById('map'),{\r\n    //         zoom:12,\r\n    //         center:{\r\n    //             lat:this.props.lat,\r\n    //             lng:this.props.lon\r\n    //         }\r\n    //     })\r\n    // };\r\n   \r\n    render() {\r\n        \r\n        return (\r\n           <Map google={this.props.google} zoom={11}  initialCenter={{\r\n            lat: this.props.lat,\r\n            lng: this.props.lon\r\n            }} style={{ height: '150px', width: '200px', position: 'relative' }} containerStyle={{ position: \"relative\" }} >\r\n                <Marker\r\n                    title=\"Location\"\r\n                    id={1}\r\n                    draggable={true}\r\n                ></Marker>\r\n                            \r\n           </Map>\r\n        )\r\n    }\r\n}\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyDylXaWcwor2waDca7aLXgXUcUMAxyddrQ'\r\n})(GoogleMap)\r\n\r\nconst oldkey = \"AIzaSyAq06l5RUVfib62IYRQacLc-KAy0XIWAVs\"","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchdata} from '../actions';\r\nimport Chart from './chart';\r\nimport GoogleMap from './googlemap'; \r\n\r\nclass Content extends React.Component{\r\n    renderweather=(data)=>{\r\n        const temp = data.list.map(item=> item.main.temp - 273);\r\n        const pres = data.list.map(item=>item.main.pressure);\r\n        const hum = data.list.map(item=>item.main.humidity);\r\n        const {lon, lat} = data.city.coord;\r\n       return(\r\n      <tr key={data.city.id}>\r\n          <td className=\"tddiv\"><GoogleMap lat={lat} lon={lon}/></td>\r\n          <Chart element={temp} color='red' unit=\"&#8451;\"/>\r\n          <Chart element={pres} color='blue' unit=\"kpa\"/>\r\n          <Chart element={hum} color='green' unit=\"%\"/>\r\n      </tr>\r\n       )\r\n    }\r\n    render(){\r\n      \r\n    return(\r\n   <table className=\"ui fixed single line table\">\r\n  <thead>\r\n    <tr className='center aligned'>\r\n      <th>city</th>\r\n      <th>tempreture</th>\r\n      <th>pressure</th>\r\n      <th>humidity</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {this.props.weather.map(this.renderweather)}\r\n    </tbody>\r\n    </table>\r\n    )\r\n}}\r\nconst mapStateToProps=(state)=>{\r\n     return{\r\n         weather:state.weather\r\n     }\r\n}\r\nexport default connect(mapStateToProps, {fetchdata})(Content)","import React from 'react';\r\nimport SearchBar from './searchBar';\r\nimport Content from './content';\r\n\r\nconst App =()=>{\r\n    return(\r\n        <div className=\"ui container\" style={{marginTop:'10px'}}>\r\n            <SearchBar/>\r\n            <Content />\r\n        </div>\r\n    )\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {applyMiddleware, createStore, compose} from 'redux';\r\nimport Thunk from 'redux-thunk';\r\n\r\nimport Reducers from './reducers';\r\nimport App from './components/app';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(Reducers, composeEnhancers(applyMiddleware(Thunk)))\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}